
This is what a sigle read from an illumina machine looks like. The first row is
an ID that we'll be using throughout this exercise. mouse1.fastq has 100,000
reads (i.e., these 4 line units).

@NS500322:33:H5CC5BGXX:1:11102:8973:1458
AACTGCTCGGTCTCCTTATCGAATACATGAATCTTATCAATGTCAAAGGCGAACTAAATGCAGTCACAAGGCCTGGAAGTGGTACGGGGATCAACCCTTGCAGTGATCGGGACCTCTTCCAGAACAAAA
+
<7AAA7FFF.7FFFFF<)FF<FF)F<)FFAFFF<F<AFAFFF<FAFFAF).F<FF.F<FAF).FFFF.)F.FF.)<A7AAF<FFFF..)77F).FFFF.7<77.AA7F))F..FFF77)AAFF)F<FF.

We first trim away low quality reads using trimmomatic. This is in
mouse1_trim.fastq. In the previous read, we've basically trimmed away the stuff
at the end.

@NS500322:33:H5CC5BGXX:1:11102:8973:1458
AACTGCTCGGTCTCCTTATCGAATACATGAATCTTATCAATGTCAAAGGCGAACTAAATGCAGTCACAAGGCCTGGAAGTGGTACG
+
<7AAA7FFF.7FFFFF<)FF<FF)F<)FFAFFF<F<AFAFFF<FAFFAF).F<FF.F<FAF).FFFF.)F.FF.)<A7AAF<FFFF

mouse1_qual.fastq then applies a global quality criterion to just throw away
some low quality reads. Our read from before is still in the file though.

@NS500322:33:H5CC5BGXX:1:11102:8973:1458
AACTGCTCGGTCTCCTTATCGAATACATGAATCTTATCAATGTCAAAGGCGAACTAAATGCAGTCACAAGGCCTGGAAGTGGTACG
+
<7AAA7FFF.7FFFFF<)FF<FF)F<)FFAFFF<F<AFAFFF<FAFFAF).F<FF.F<FAF).FFFF.)F.FF.)<A7AAF<FFFF

Deduplication creates two files, mouse1_unique.fastq and
mouse1_unique.fastq.clstr. The second file shows which unique read each of the
original reads corresponds to. For example, the correspondence looks like

>Cluster 18
0       160nt, >NS500322:33:H5CC5BGXX:1:11101:5243:4836... *
>Cluster 19
0       160nt, >NS500322:33:H5CC5BGXX:1:11104:7813:7120... *
1       160nt, >NS500322:33:H5CC5BGXX:1:11101:14506:6642... at 1:160:1:160/+/100.00%
>Cluster 20
0       160nt, >NS500322:33:H5CC5BGXX:1:11102:10415:10822... *

and we also can see what the sequences are for the new "clusters," this is in
mouse1_unique.fastq. The first two clusters are,

@NS500322:33:H5CC5BGXX:1:11101:20015:13246
GCGCGGTTTAATGCTTCCTTAATTACGATTGCTCCTAAATCTGCTGCCGGGGTATTGCTTAAAGCTCCTCCCATTCTGCCAATTGCGGTACGGCATGCGCCTGCTAAAACTACTTTGTTTGCCATTTTCTCGTCTCCTTTACAAACTTGTCTTAAAGCTG
+NS500322:33:H5CC5BGXX:1:11101:20015:13246
AAAAAFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFF<FFFAFFAFFFFFFF.FFFFFFFFFFFFFFFAF7FFFAFFF<FFA.FFFFAAAFF.F7FAAA
@NS500322:33:H5CC5BGXX:1:11104:19675:11487
GGCAGGCCGGACGCGTCCTGGGCGGCTTCCAGGGCGGAGGCGGCGGCAAACTTGGCAGCGCTGCCGAAGCCGGGGCAGTGGTCGGTGCCGGCCAGGTCGTTGTCAATGGTCTTGGGTATGCCGATCACCCGCAGCTCATAGCCCGCCTGCTCCGCCAGCC
+NS500322:33:H5CC5BGXX:1:11104:19675:11487
AAAAAFFFFF<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF<A.FFFFFFAFFFFFFFFFAFFFFFFFFFFFFFFFFFFFF.FFFFFFFFFFFFFFFFAAFFFFF<FFFFFFFFFFFAFF)FFF<AAFAFFFFFFFFFFFFFFFF<AFAA.FAA

Next, we want to remove reads that are irrelevant to the metatranscriptomic
analysis. We'll map the unique reads against a database of known vectors and
contaminants, called UniVec_Core. A few lines from this database looks like,

>gnl|uv|J01749.1:1-4361-49 Cloning vector pBR322
TTCTCATGTTTGACAGCTTATCATCGATAAGCTTTAATGCGGTAGTTTATCACAGTTAAATTGCTAACGC
AGTCAGGCACCGTGTATGAAATCTAACAATGCGCTCATCGTCATCCTCGGCACCGTCACCCTGGATGCTG
TAGGCATAGGCTTGGTTATGCCGGTACTGCCGGGCCTCTTGCGGGATATCGTCCATTCCGACAGCATCGC
CAGTCACTATGGCGTGCTGCTAGCGCTATATGCGTTGATGCAATTTCTATGCGCACCCGTTCTCGGAGCA
CTGTCCGACCGCTTTGGCCGCCGCCCAGTCCTGCTCGCTTCGCTACTTGGAGCCACTATCGACTACGCGA
TCATGGCGACCACACCCGTCCTGTGGATCCTCTACGCCGGACGCATCGTGGCCGGCATCACCGGCGCCAC
AGGTGCGGTTGCTGGCGCCTATATCGCCGACATCACCGATGGGGAAGATCGGGCTCGCCACTTCGGGCTC
ATGAGCGCTTGTTTCGGCGTGGGTATGGTGGCAGGCCCCGTGGCCGGGGGACTGTTGGGCGCCATCTCCT
TGCATGCACCATTCCTTGCGGCGGCGGTGCTCAACGGCCTCAACCTACTACTGGGCTGCTTCCTAATGCA
GGAGTCGCATAAGGGAGAGCGTCGACCGATGCCCTTGAGAGCCTTCAACCCAGTCAGCTCCTTCCGGTGG
GCGCGGGGCATGACTATCGTCGCCGCACTTATGACTGTCTTCTTTATCATGCAACTCGTAGGACAGGTGC
CGGCAGCGCTCTGGGTCATTTTCGGCGAGGACCGCTTTCGCTGGAGCGCGACGATGATCGGCCTGTCGCT

or, a little later on,

>gnl|uv|NGB00991.1:1-19 Small-RNA size-range quality control (SQRC) spike-in SS-19
TCGATACTCACGTACAGCA
>gnl|uv|NGB00318.1:1-16 Adaptor used in I.M.A.G.E. library NIH_MGC_53 and other libraries
CACGGCCATTATGGCC
>gnl|uv|NGB00990.1:1-16 Small-RNA size-range quality control (SQRC) spike-in SS-16
CACGCACGCTCAGATA
>gnl|uv|NGB00285.1:1-12 EcoRI adaptor used in I.M.A.G.E. library Xenla_13LiCl and other libraries
GAATTCCCCGGG

and it goes on for ~ 14,000 more lines, for a grand total of 3137 vectors /
contaminants.

First, we align reads using bwa. We get a SAM file which has lines like this,

NS500322:33:H5CC5BGXX:1:11104:21865:1962	2048	gnl|uv|NGB00007.1:1-45	13	0	81H33M46H	*	0	0	TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT	FFF.FFFF.FAFFF7)FFFFFFF)FFFFFF<.)	NM:i:0	MD:Z:33	AS:i:33	XS:i:33	SA:Z:gnl|uv|NGB00007.1:1-45,13,+,112S33M15S,0,0;	XA:Z:gnl|uv|NGB00007.1:1-45,+13,88S33M39S,0;
NS500322:33:H5CC5BGXX:1:11103:11980:5642	4	*	0	0	*	*	0	0	GTACCGTATGGAGTAGTAAAAGAGCGCTCTTCCCATGTGCCAATTAATGGGTCTCTACCGTTGCATACAATAAGTATAACAACAAACGCTATAACTATAGCTGCTACTATTGTTAGCTGTCTAGCCGTTAGTTTACTTTTTCCCCCAATAAATTTTTTTG<AAAAFFAFFFFFFFFFFF<FF<FFFFFFFFFFFAFFFFFFAFFA.FF<FFFFFFFFFFFFAFFFFAF.AFAFFF..AFF<<FF.F.FAF<F<FAF.A7FF7FF<7FF.<FF)FA.FFF7<FFF)<FFF.FFFF<FFFF.A<F.7<.<<))77F7<<.A<	AS:i:0	XS:i:0
NS500322:33:H5CC5BGXX:1:11103:13003:11362	4	*	0	0	*	*	0	0	GTGTAGACTGGTTCGCCTGTGCAAGCATAGACTGTCCTGCCTGTGCAAGAATGTTGTTCTTGCTGTACTGAACCATTTCAGATGCCATATCTGTATCACGGATACGGGATTCTGCTGACTGAGTATTCTCAGCTGCTACATCCAGGTTAGCAATGGTGTGAAAAAFFFFFFFFFFFFFFFFFF.FFFFFFFFFFFFFFFFFFFAFF<FFFFAFFFFFFFFFFFF.FFFFF7AFFAFFFF7FFFFFF7AFFFFFFFFFFFFFFFFFAFFFFFFAFFFFFFAFFFF.FFFFF<<FFFAF.FFF7FA<F<F<FF<<<<<FFAF	AS:i:0	XS:i:0
NS500322:33:H5CC5BGXX:1:11103:11031:6123	4	*	0	0	*	*	0	0	GTCGGTCTGGTGCCCCGCGTCGTTGACGTAGAACTCCCGGCTGACCTCCGCCCCGCAGGCGGAGAGCACGGAGGCCAGGGTGTCCCCCAGCACGCCGCCCCGGGCGTTGCCCATGTGCATGGGGCCGGTGGGGATGGCGGAGACGAACTCCACCATGCTT

This first line corresponds to a read that is aligned to one of the
contaminants. The original read looked like

@NS500322:33:H5CC5BGXX:1:11104:21865:1962
ATTTTGTTTAATGATTTATTTTTTTTATTTTTTTAAATTTTTGTTGTATCTTTTTTTTTTTTATTTTTTTTTTTTTATTTATTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTGTT
+
.<AAAFF)FFFAFAFFFFAAFFAFF<.FFFFFFAFFFFFFFFAFFFFFFFFFFFFFFFFFF..AFF<FFF<.FF7F..A.)FFF.FFFF.FAFFF7)FFFFFFF)FFFFFF<.)FFFFFFFF)FFFFFFFFFAA)FFFFAFA7.<A7<<A7A<7<A<)7<

which I suppose looks like the primer,

>gnl|uv|NGB00007.1:1-45 CLONTECH PCR-Select cDNA synthesis primer
TTTTGTACAAGCTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTVN

though really the only similarity I can see is that they both have lots of T's.
I'm not sure how to interpret the other three lines. In the end though, we can
use samtools to create a new set of unique reads that don't map to the
contaminants. This is called mouse1_univec_bwa.fastq, and it looks just like the
original unique reads,

@NS500322:33:H5CC5BGXX:1:11101:20015:13246
GCGCGGTTTAATGCTTCCTTAATTACGATTGCTCCTAAATCTGCTGCCGGGGTATTGCTTAAAGCTCCTCCCATTCTGCCAATTGCGGTACGGCATGCGCCTGCTAAAACTACTTTGTTTGCCATTTTCTCGTCTCCTTTACAAACTTGTCTTAAAGCTG
+
AAAAAFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFF<FFFAFFAFFFFFFF.FFFFFFFFFFFFFFFAF7FFFAFFF<FFA.FFFFAAAFF.F7FAAA
@NS500322:33:H5CC5BGXX:1:11104:19675:11487
GGCAGGCCGGACGCGTCCTGGGCGGCTTCCAGGGCGGAGGCGGCGGCAAACTTGGCAGCGCTGCCGAAGCCGGGGCAGTGGTCGGTGCCGGCCAGGTCGTTGTCAATGGTCTTGGGTATGCCGATCACCCGCAGCTCATAGCCCGCCTGCTCCGCCAGCC
+
AAAAAFFFFF<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF<A.FFFFFFAFFFFFFFFFAFFFFFFFFFFFFFFFFFFFF.FFFFFFFFFFFFFFFFAAFFFFF<FFFFFFFFFFFAFF)FFF<AAFAFFFFFFFFFFFFFFFF<AFAA.FAA

but has fewer lines. We can also save all the contaminant reads in another file,
mouse1_univec_bwa_contaminants.fastq, and as expected, they look a little fishy,

@NS500322:33:H5CC5BGXX:1:11104:21865:1962
ATTTTGTTTAATGATTTATTTTTTTTATTTTTTTAAATTTTTGTTGTATCTTTTTTTTTTTTATTTTTTTTTTTTTATTTATTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTGTT
+
.<AAAFF)FFFAFAFFFFAAFFAFF<.FFFFFFAFFFFFFFFAFFFFFFFFFFFFFFFFFF..AFF<FFF<.FF7F..A.)FFF.FFFF.FAFFF7)FFFFFFF)FFFFFF<.)FFFFFFFF)FFFFFFFFFAA)FFFFAFA7.<A7<<A7A<7<A<)7<
@NS500322:33:H5CC5BGXX:1:11104:16727:8741
TTTTAGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
+
AAAAAFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF<FAFFFFFFFFFFFFFFFFFFAFFFA<FFFF<FFFFF

A thing about alignment is that different approaches can give you different
answers. In the workflow we're following, the bwa-defined contaminant-free reads
are aligned to UniVec_Core using BLAT instead. However, none of the reads map --
the BWA alignment seems to have been sufficient in this toy example.

From here, almost the exact same logic is used to remove reads from the host
mouse genome, which is stored in mouse_cds.fa. It's nothing that interesting to
look at, a few lines look like

>ENSMUST00000103441.1 cds chromosome:GRCm38:12:113528032:113528054:-1 gene:ENSMUSG00000076632.1 gene_biotype:IG_D_gene transcript_biotype:IG_D_gene gene_symbol:Gm16968 description:predicted gene, 16968 [Source:MGI Symbol;Acc:MGI:4439892]
TATATAACTAAAGTGGTAGCTCA
>ENSMUST00000103643.3 cds chromosome:GRCm38:14:53469756:53470232:1 gene:ENSMUSG00000076831.3 gene_biotype:TR_V_gene transcript_biotype:TR_V_gene gene_symbol:Trav8-1 description:T cell receptor alpha variable 8-1 [Source:MGI Symbol;Acc:MGI:3649608]
ATGCACAGCCTCCTGGGGTTGTTGTTGTGGCTGCAACTGACAAGGGTGAATAGTCAACTA
GCAGAAGAGAATTCGTGGGCCCTGAGCGTCCACGAGGGTGAAAGTGTCACGGTGAATTGT
AGTTACAAGACATCCATAACTGCCCTACAGTGGTACAGACAGAAGTCAGGCAAAGGCCCT
GCCCAGCTAATCTTAATACGTTCAAATGAGAGAGAGAAGCGCAATGGAAGACTCAGAGCC
ACCCTTGACACCTCCAGCCAGAGCAGCTCCTTGTCCATCACTGCTACTCGGTGTGAAGAC
ACCGCTGTGTACTTCTGTGCTACTGATG

Next, we'll remove the reads that align to rRNA or tRNA sequences, since we're
only interested in the mRNA reads corresponding to gene expression. This is done
using a program called infernal, which makes alignments to a dataase called
Rfam. This database gives lots of information about individual ribosomal
sequences,

NAME  mir-924
ACC   RF00999
LENG  53
MAXL  130
ALPH  RNA
RF    no
MM    no
CONS  yes
CS    yes
MAP   yes
DATE  Thu Feb 20 19:00:27 2014
COM   [1] /nfs/production/xfam/rfam/software/bin/cmbuild -F CM SEED
COM   [2] /nfs/production/xfam/rfam/software/bin/cmcalibrate --mpi CM
NSEQ  4
EFFN  3.613281
CKSUM 4000093580
STATS LOCAL MSV       -7.6869  0.72084
STATS LOCAL VITERBI   -8.2275  0.72084
STATS LOCAL FORWARD   -3.9049  0.72084
HMM          A        C        G        U
            m->m     m->i     m->d     i->m     i->i     d->m     d->d
  COMPO   1.32772  1.38871  1.55377  1.29436

You could try googling for these sequences, I found this page,
http://rfam.xfam.org/family/RF00999. In the end though, we mainly care about
whether our reads look like these non-mRNAs. Inferenal gives us output like
this,

#target name                             accession query name           accession mdl mdl from   mdl to seq from   seq to strand trunc pass   gc  bias  score   E-value inc description of target
#--------------------------------------- --------- -------------------- --------- --- -------- -------- -------- -------- ------ ----- ---- ---- ----- ------ --------- --- ---------------------
NS500322:33:H5CC5BGXX:1:11104:13303:2956 -         5S_rRNA              RF00001    cm        1      119      125       12      -    no    1 0.68   0.1   49.2   2.5e-08 !   -
NS500322:33:H5CC5BGXX:1:11101:2898:13779 -         5S_rRNA              RF00001    cm       17      108       89        1      - 5'&3'    5 0.65   0.0   41.8     2e-06 !   -
NS500322:33:H5CC5BGXX:1:11101:2921:12658  -         5_8S_rRNA            RF00002    cm       20      143      129        5      - 5'&3'    5 0.58   0.0   31.7   1.3e-05 !   -
NS500322:33:H5CC5BGXX:1:11102:26449:16886 -         5_8S_rRNA            RF00002    cm       33      135        3      106      + 5'&3'    5 0.54   0.0   26.6   0.00035 !   -
NS500322:33:H5CC5BGXX:1:11103:7116:4240 -         U1                   RF00003    cm       24      142      118        1      - 5'&3'    5 0.56   0.0   97.6   1.3e-25 !   -
NS500322:33:H5CC5BGXX:1:11101:18431:3294  -         tRNA                 RF00005    cm        1       71      132       62      -    no    1 0.51   0.0   72.7   1.3e-15 !   -
NS500322:33:H5CC5BGXX:1:11102:13308:5641  -         tRNA                 RF00005    cm        1       71       82       10      -    no    1 0.52   0.0   71.2   3.3e-15 !   -
NS500322:33:H5CC5BGXX:1:11101:1195:4484   -         tRNA                 RF00005    cm        1       71       85       12      -    no    1 0.57   0.0   71.2   3.4e-15 !   -
NS500322:33:H5CC5BGXX:1:11104:6267:10357  -         tRNA                 RF00005    cm        1       71      117       44      -    no    1 0.65   0.0   70.1     7e-15 !   -
NS500322:33:H5CC5BGXX:1:11102:9099:13750  -         tRNA                 RF00005    cm        1       71      146       63      -    no    1 0.55   0.0   69.9   7.7e-15 !   -

Each line is a read that seems to align with an RNA sequence, specified by by
the accession IDs.

At this point, we've done all the read filtering that we were planning on. In
the next steps, it will be necessary to work with the non-deduplicated reads.
This is done using a custom script described in the workflow, and the result is
a file called mouse1_mRNA.fastq. It looks like the original reads files, but
we've removed contaminants and non-mRNAs,

@NS500322:33:H5CC5BGXX:1:11101:10001:10911
CCCATTCCGAAAACTCAACTTCCAATACCGACTTCTAAAAAATATTCGGTTCCAGAACTTCAACTTCCGTTTTTACATTTCCAAAATCCTTAACAGGGGAGAATGTGATGCCGTTTGTCTTGTACCTCTGAATTATGATTGAGGGGGAGTTATTTTAGT
+
AAAAAFFFFFFFAFFFAFFFFFFFFFFFFFFFFFFF<FFFFFFAFFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF<FFFFFFFFFFFFAFFFFFAFFFFFFFFFFFFAF)<FFFAFFFFFFFFAFAFFFFFF.FF
@NS500322:33:H5CC5BGXX:1:11101:10001:13818
GGGGCCGCGGTACGGGTGGACCACTGGACATAGTCGCAGTCCTTCAGCTCGTTATAGCCAGCGGTGAGGTTTCCGTTTTCTACCAGCTTTTCGTTGTGGTTCTTGATGTTCTTG
+
AAAAAFFFFFFFFFFFFFFFFFFFFFFAFAFFFFFFFFFFFA<FF.FFFFFFAFFFFFF.FFFFFFFFFFFFFFFAFFFAF7FF.FFFFFFAFFFFFFF<A<FFFFFFFFAFFF
@NS500322:33:H5CC5BGXX:1:11101:10001:4885
CGTCGATGTGGGTCACGCCGTCGGGGCTGTCGGCGCTGGCCACGGCGATGTAGACCACGATGACCGTGTCGCCGTTGGCGGCCACGCCGTAGATGGAGCCGTCGGTGCAGATCTGCATGTTCTTCAGCTGGACGGGCATCACGTCGGCG
+
A7AAAFFFFFFFFF<FFFFFFFAFAFFFFFFF<F7FF<FFFFFFFFFFFFFFF.7.7FFFFF.FFFAFFFA)FFF<FFFFFFF)77<FFFFFAFAFFFFFFFFFFFF<)FA<FAF.F)F<<<F.F)FFFFFAFAAFF.F<.<.F.A.)<

Now that we have actual reads from mRNAs, we want to characterize them
taxonomically and functionally. Note that the goal is different from metagenomic
and 16S species quantification, because we're only characterizing the taxa for
the expressed reads -- it tells us which species are more "functionally active,"
though not necessarily abundant. For taxonomic classification, they use a
package called Kaiju, which works with user-specified reference databases. The
main databases used by this package are

