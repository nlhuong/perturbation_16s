
This is what a sigle read from an illumina machine looks like. The first row is
an ID that we'll be using throughout this exercise. mouse1.fastq has 100,000
reads (i.e., these 4 line units).

@NS500322:33:H5CC5BGXX:1:11102:8973:1458
AACTGCTCGGTCTCCTTATCGAATACATGAATCTTATCAATGTCAAAGGCGAACTAAATGCAGTCACAAGGCCTGGAAGTGGTACGGGGATCAACCCTTGCAGTGATCGGGACCTCTTCCAGAACAAAA
+
<7AAA7FFF.7FFFFF<)FF<FF)F<)FFAFFF<F<AFAFFF<FAFFAF).F<FF.F<FAF).FFFF.)F.FF.)<A7AAF<FFFF..)77F).FFFF.7<77.AA7F))F..FFF77)AAFF)F<FF.

We first trim away low quality reads using trimmomatic. This is in
mouse1_trim.fastq. In the previous read, we've basically trimmed away the stuff
at the end.

@NS500322:33:H5CC5BGXX:1:11102:8973:1458
AACTGCTCGGTCTCCTTATCGAATACATGAATCTTATCAATGTCAAAGGCGAACTAAATGCAGTCACAAGGCCTGGAAGTGGTACG
+
<7AAA7FFF.7FFFFF<)FF<FF)F<)FFAFFF<F<AFAFFF<FAFFAF).F<FF.F<FAF).FFFF.)F.FF.)<A7AAF<FFFF

mouse1_qual.fastq then applies a global quality criterion to just throw away
some low quality reads. Our read from before is still in the file though.

@NS500322:33:H5CC5BGXX:1:11102:8973:1458
AACTGCTCGGTCTCCTTATCGAATACATGAATCTTATCAATGTCAAAGGCGAACTAAATGCAGTCACAAGGCCTGGAAGTGGTACG
+
<7AAA7FFF.7FFFFF<)FF<FF)F<)FFAFFF<F<AFAFFF<FAFFAF).F<FF.F<FAF).FFFF.)F.FF.)<A7AAF<FFFF

Deduplication creates two files, mouse1_unique.fastq and
mouse1_unique.fastq.clstr. The second file shows which unique read each of the
original reads corresponds to. For example, the correspondence looks like

>Cluster 18
0       160nt, >NS500322:33:H5CC5BGXX:1:11101:5243:4836... *
>Cluster 19
0       160nt, >NS500322:33:H5CC5BGXX:1:11104:7813:7120... *
1       160nt, >NS500322:33:H5CC5BGXX:1:11101:14506:6642... at 1:160:1:160/+/100.00%
>Cluster 20
0       160nt, >NS500322:33:H5CC5BGXX:1:11102:10415:10822... *

and we also can see what the sequences are for the new "clusters," this is in
mouse1_unique.fastq. The first two clusters are,

@NS500322:33:H5CC5BGXX:1:11101:20015:13246
GCGCGGTTTAATGCTTCCTTAATTACGATTGCTCCTAAATCTGCTGCCGGGGTATTGCTTAAAGCTCCTCCCATTCTGCCAATTGCGGTACGGCATGCGCCTGCTAAAACTACTTTGTTTGCCATTTTCTCGTCTCCTTTACAAACTTGTCTTAAAGCTG
+NS500322:33:H5CC5BGXX:1:11101:20015:13246
AAAAAFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFF<FFFAFFAFFFFFFF.FFFFFFFFFFFFFFFAF7FFFAFFF<FFA.FFFFAAAFF.F7FAAA
@NS500322:33:H5CC5BGXX:1:11104:19675:11487
GGCAGGCCGGACGCGTCCTGGGCGGCTTCCAGGGCGGAGGCGGCGGCAAACTTGGCAGCGCTGCCGAAGCCGGGGCAGTGGTCGGTGCCGGCCAGGTCGTTGTCAATGGTCTTGGGTATGCCGATCACCCGCAGCTCATAGCCCGCCTGCTCCGCCAGCC
+NS500322:33:H5CC5BGXX:1:11104:19675:11487
AAAAAFFFFF<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF<A.FFFFFFAFFFFFFFFFAFFFFFFFFFFFFFFFFFFFF.FFFFFFFFFFFFFFFFAAFFFFF<FFFFFFFFFFFAFF)FFF<AAFAFFFFFFFFFFFFFFFF<AFAA.FAA

Next, we want to remove reads that are irrelevant to the metatranscriptomic
analysis. We'll map the unique reads against a database of known vectors and
contaminants, called UniVec_Core. A few lines from this database looks like,

>gnl|uv|J01749.1:1-4361-49 Cloning vector pBR322
TTCTCATGTTTGACAGCTTATCATCGATAAGCTTTAATGCGGTAGTTTATCACAGTTAAATTGCTAACGC
AGTCAGGCACCGTGTATGAAATCTAACAATGCGCTCATCGTCATCCTCGGCACCGTCACCCTGGATGCTG
TAGGCATAGGCTTGGTTATGCCGGTACTGCCGGGCCTCTTGCGGGATATCGTCCATTCCGACAGCATCGC
CAGTCACTATGGCGTGCTGCTAGCGCTATATGCGTTGATGCAATTTCTATGCGCACCCGTTCTCGGAGCA
CTGTCCGACCGCTTTGGCCGCCGCCCAGTCCTGCTCGCTTCGCTACTTGGAGCCACTATCGACTACGCGA
TCATGGCGACCACACCCGTCCTGTGGATCCTCTACGCCGGACGCATCGTGGCCGGCATCACCGGCGCCAC
AGGTGCGGTTGCTGGCGCCTATATCGCCGACATCACCGATGGGGAAGATCGGGCTCGCCACTTCGGGCTC
ATGAGCGCTTGTTTCGGCGTGGGTATGGTGGCAGGCCCCGTGGCCGGGGGACTGTTGGGCGCCATCTCCT
TGCATGCACCATTCCTTGCGGCGGCGGTGCTCAACGGCCTCAACCTACTACTGGGCTGCTTCCTAATGCA
GGAGTCGCATAAGGGAGAGCGTCGACCGATGCCCTTGAGAGCCTTCAACCCAGTCAGCTCCTTCCGGTGG
GCGCGGGGCATGACTATCGTCGCCGCACTTATGACTGTCTTCTTTATCATGCAACTCGTAGGACAGGTGC
CGGCAGCGCTCTGGGTCATTTTCGGCGAGGACCGCTTTCGCTGGAGCGCGACGATGATCGGCCTGTCGCT

or, a little later on,

>gnl|uv|NGB00991.1:1-19 Small-RNA size-range quality control (SQRC) spike-in SS-19
TCGATACTCACGTACAGCA
>gnl|uv|NGB00318.1:1-16 Adaptor used in I.M.A.G.E. library NIH_MGC_53 and other libraries
CACGGCCATTATGGCC
>gnl|uv|NGB00990.1:1-16 Small-RNA size-range quality control (SQRC) spike-in SS-16
CACGCACGCTCAGATA
>gnl|uv|NGB00285.1:1-12 EcoRI adaptor used in I.M.A.G.E. library Xenla_13LiCl and other libraries
GAATTCCCCGGG

and it goes on for ~ 14,000 more lines, for a grand total of 3137 vectors /
contaminants.

First, we align reads using bwa. We get a SAM file which has lines like this,

NS500322:33:H5CC5BGXX:1:11104:21865:1962	2048	gnl|uv|NGB00007.1:1-45	13	0	81H33M46H	*	0	0	TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT	FFF.FFFF.FAFFF7)FFFFFFF)FFFFFF<.)	NM:i:0	MD:Z:33	AS:i:33	XS:i:33	SA:Z:gnl|uv|NGB00007.1:1-45,13,+,112S33M15S,0,0;	XA:Z:gnl|uv|NGB00007.1:1-45,+13,88S33M39S,0;
NS500322:33:H5CC5BGXX:1:11103:11980:5642	4	*	0	0	*	*	0	0	GTACCGTATGGAGTAGTAAAAGAGCGCTCTTCCCATGTGCCAATTAATGGGTCTCTACCGTTGCATACAATAAGTATAACAACAAACGCTATAACTATAGCTGCTACTATTGTTAGCTGTCTAGCCGTTAGTTTACTTTTTCCCCCAATAAATTTTTTTG<AAAAFFAFFFFFFFFFFF<FF<FFFFFFFFFFFAFFFFFFAFFA.FF<FFFFFFFFFFFFAFFFFAF.AFAFFF..AFF<<FF.F.FAF<F<FAF.A7FF7FF<7FF.<FF)FA.FFF7<FFF)<FFF.FFFF<FFFF.A<F.7<.<<))77F7<<.A<	AS:i:0	XS:i:0
NS500322:33:H5CC5BGXX:1:11103:13003:11362	4	*	0	0	*	*	0	0	GTGTAGACTGGTTCGCCTGTGCAAGCATAGACTGTCCTGCCTGTGCAAGAATGTTGTTCTTGCTGTACTGAACCATTTCAGATGCCATATCTGTATCACGGATACGGGATTCTGCTGACTGAGTATTCTCAGCTGCTACATCCAGGTTAGCAATGGTGTGAAAAAFFFFFFFFFFFFFFFFFF.FFFFFFFFFFFFFFFFFFFAFF<FFFFAFFFFFFFFFFFF.FFFFF7AFFAFFFF7FFFFFF7AFFFFFFFFFFFFFFFFFAFFFFFFAFFFFFFAFFFF.FFFFF<<FFFAF.FFF7FA<F<F<FF<<<<<FFAF	AS:i:0	XS:i:0
NS500322:33:H5CC5BGXX:1:11103:11031:6123	4	*	0	0	*	*	0	0	GTCGGTCTGGTGCCCCGCGTCGTTGACGTAGAACTCCCGGCTGACCTCCGCCCCGCAGGCGGAGAGCACGGAGGCCAGGGTGTCCCCCAGCACGCCGCCCCGGGCGTTGCCCATGTGCATGGGGCCGGTGGGGATGGCGGAGACGAACTCCACCATGCTT

This first line corresponds to a read that is aligned to one of the
contaminants. The original read looked like

@NS500322:33:H5CC5BGXX:1:11104:21865:1962
ATTTTGTTTAATGATTTATTTTTTTTATTTTTTTAAATTTTTGTTGTATCTTTTTTTTTTTTATTTTTTTTTTTTTATTTATTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTGTT
+
.<AAAFF)FFFAFAFFFFAAFFAFF<.FFFFFFAFFFFFFFFAFFFFFFFFFFFFFFFFFF..AFF<FFF<.FF7F..A.)FFF.FFFF.FAFFF7)FFFFFFF)FFFFFF<.)FFFFFFFF)FFFFFFFFFAA)FFFFAFA7.<A7<<A7A<7<A<)7<

which I suppose looks like the primer,

>gnl|uv|NGB00007.1:1-45 CLONTECH PCR-Select cDNA synthesis primer
TTTTGTACAAGCTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTVN

though really the only similarity I can see is that they both have lots of T's.
I'm not sure how to interpret the other three lines. In the end though, we can
use samtools to create a new set of unique reads that don't map to the
contaminants. This is called mouse1_univec_bwa.fastq, and it looks just like the
original unique reads,

@NS500322:33:H5CC5BGXX:1:11101:20015:13246
GCGCGGTTTAATGCTTCCTTAATTACGATTGCTCCTAAATCTGCTGCCGGGGTATTGCTTAAAGCTCCTCCCATTCTGCCAATTGCGGTACGGCATGCGCCTGCTAAAACTACTTTGTTTGCCATTTTCTCGTCTCCTTTACAAACTTGTCTTAAAGCTG
+
AAAAAFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFF<FFFAFFAFFFFFFF.FFFFFFFFFFFFFFFAF7FFFAFFF<FFA.FFFFAAAFF.F7FAAA
@NS500322:33:H5CC5BGXX:1:11104:19675:11487
GGCAGGCCGGACGCGTCCTGGGCGGCTTCCAGGGCGGAGGCGGCGGCAAACTTGGCAGCGCTGCCGAAGCCGGGGCAGTGGTCGGTGCCGGCCAGGTCGTTGTCAATGGTCTTGGGTATGCCGATCACCCGCAGCTCATAGCCCGCCTGCTCCGCCAGCC
+
AAAAAFFFFF<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF<A.FFFFFFAFFFFFFFFFAFFFFFFFFFFFFFFFFFFFF.FFFFFFFFFFFFFFFFAAFFFFF<FFFFFFFFFFFAFF)FFF<AAFAFFFFFFFFFFFFFFFF<AFAA.FAA

but has fewer lines. We can also save all the contaminant reads in another file,
mouse1_univec_bwa_contaminants.fastq, and as expected, they look a little fishy,

@NS500322:33:H5CC5BGXX:1:11104:21865:1962
ATTTTGTTTAATGATTTATTTTTTTTATTTTTTTAAATTTTTGTTGTATCTTTTTTTTTTTTATTTTTTTTTTTTTATTTATTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTGTT
+
.<AAAFF)FFFAFAFFFFAAFFAFF<.FFFFFFAFFFFFFFFAFFFFFFFFFFFFFFFFFF..AFF<FFF<.FF7F..A.)FFF.FFFF.FAFFF7)FFFFFFF)FFFFFF<.)FFFFFFFF)FFFFFFFFFAA)FFFFAFA7.<A7<<A7A<7<A<)7<
@NS500322:33:H5CC5BGXX:1:11104:16727:8741
TTTTAGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
+
AAAAAFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF<FAFFFFFFFFFFFFFFFFFFAFFFA<FFFF<FFFFF

A thing about alignment is that different approaches can give you different
answers. In the workflow we're following, the bwa-defined contaminant-free reads
are aligned to UniVec_Core using BLAT instead. However, none of the reads map --
the BWA alignment seems to have been sufficient in this toy example.

From here, almost the exact same logic is used to remove reads from the host
mouse genome, which is stored in mouse_cds.fa. It's nothing that interesting to
look at, a few lines look like

>ENSMUST00000103441.1 cds chromosome:GRCm38:12:113528032:113528054:-1 gene:ENSMUSG00000076632.1 gene_biotype:IG_D_gene transcript_biotype:IG_D_gene gene_symbol:Gm16968 description:predicted gene, 16968 [Source:MGI Symbol;Acc:MGI:4439892]
TATATAACTAAAGTGGTAGCTCA
>ENSMUST00000103643.3 cds chromosome:GRCm38:14:53469756:53470232:1 gene:ENSMUSG00000076831.3 gene_biotype:TR_V_gene transcript_biotype:TR_V_gene gene_symbol:Trav8-1 description:T cell receptor alpha variable 8-1 [Source:MGI Symbol;Acc:MGI:3649608]
ATGCACAGCCTCCTGGGGTTGTTGTTGTGGCTGCAACTGACAAGGGTGAATAGTCAACTA
GCAGAAGAGAATTCGTGGGCCCTGAGCGTCCACGAGGGTGAAAGTGTCACGGTGAATTGT
AGTTACAAGACATCCATAACTGCCCTACAGTGGTACAGACAGAAGTCAGGCAAAGGCCCT
GCCCAGCTAATCTTAATACGTTCAAATGAGAGAGAGAAGCGCAATGGAAGACTCAGAGCC
ACCCTTGACACCTCCAGCCAGAGCAGCTCCTTGTCCATCACTGCTACTCGGTGTGAAGAC
ACCGCTGTGTACTTCTGTGCTACTGATG

Next, we'll remove the reads that align to rRNA or tRNA sequences, since we're
only interested in the mRNA reads corresponding to gene expression. This is done
using a program called infernal, which makes alignments to a dataase called
Rfam. This database gives lots of information about individual ribosomal
sequences,

NAME  mir-924
ACC   RF00999
LENG  53
MAXL  130
ALPH  RNA
RF    no
MM    no
CONS  yes
CS    yes
MAP   yes
DATE  Thu Feb 20 19:00:27 2014
COM   [1] /nfs/production/xfam/rfam/software/bin/cmbuild -F CM SEED
COM   [2] /nfs/production/xfam/rfam/software/bin/cmcalibrate --mpi CM
NSEQ  4
EFFN  3.613281
CKSUM 4000093580
STATS LOCAL MSV       -7.6869  0.72084
STATS LOCAL VITERBI   -8.2275  0.72084
STATS LOCAL FORWARD   -3.9049  0.72084
HMM          A        C        G        U
            m->m     m->i     m->d     i->m     i->i     d->m     d->d
  COMPO   1.32772  1.38871  1.55377  1.29436

You could try googling for these sequences, I found this page,
http://rfam.xfam.org/family/RF00999. In the end though, we mainly care about
whether our reads look like these non-mRNAs. Inferenal gives us output like
this,

#target name                             accession query name           accession mdl mdl from   mdl to seq from   seq to strand trunc pass   gc  bias  score   E-value inc description of target
#--------------------------------------- --------- -------------------- --------- --- -------- -------- -------- -------- ------ ----- ---- ---- ----- ------ --------- --- ---------------------
NS500322:33:H5CC5BGXX:1:11104:13303:2956 -         5S_rRNA              RF00001    cm        1      119      125       12      -    no    1 0.68   0.1   49.2   2.5e-08 !   -
NS500322:33:H5CC5BGXX:1:11101:2898:13779 -         5S_rRNA              RF00001    cm       17      108       89        1      - 5'&3'    5 0.65   0.0   41.8     2e-06 !   -
NS500322:33:H5CC5BGXX:1:11101:2921:12658  -         5_8S_rRNA            RF00002    cm       20      143      129        5      - 5'&3'    5 0.58   0.0   31.7   1.3e-05 !   -
NS500322:33:H5CC5BGXX:1:11102:26449:16886 -         5_8S_rRNA            RF00002    cm       33      135        3      106      + 5'&3'    5 0.54   0.0   26.6   0.00035 !   -
NS500322:33:H5CC5BGXX:1:11103:7116:4240 -         U1                   RF00003    cm       24      142      118        1      - 5'&3'    5 0.56   0.0   97.6   1.3e-25 !   -
NS500322:33:H5CC5BGXX:1:11101:18431:3294  -         tRNA                 RF00005    cm        1       71      132       62      -    no    1 0.51   0.0   72.7   1.3e-15 !   -
NS500322:33:H5CC5BGXX:1:11102:13308:5641  -         tRNA                 RF00005    cm        1       71       82       10      -    no    1 0.52   0.0   71.2   3.3e-15 !   -
NS500322:33:H5CC5BGXX:1:11101:1195:4484   -         tRNA                 RF00005    cm        1       71       85       12      -    no    1 0.57   0.0   71.2   3.4e-15 !   -
NS500322:33:H5CC5BGXX:1:11104:6267:10357  -         tRNA                 RF00005    cm        1       71      117       44      -    no    1 0.65   0.0   70.1     7e-15 !   -
NS500322:33:H5CC5BGXX:1:11102:9099:13750  -         tRNA                 RF00005    cm        1       71      146       63      -    no    1 0.55   0.0   69.9   7.7e-15 !   -

Each line is a read that seems to align with an RNA sequence, specified by by
the accession IDs.

At this point, we've done all the read filtering that we were planning on. In
the next steps, it will be necessary to work with the non-deduplicated reads.
This is done using a custom script described in the workflow, and the result is
a file called mouse1_mRNA.fastq. It looks like the original reads files, but
we've removed contaminants and non-mRNAs,

@NS500322:33:H5CC5BGXX:1:11101:10001:10911
CCCATTCCGAAAACTCAACTTCCAATACCGACTTCTAAAAAATATTCGGTTCCAGAACTTCAACTTCCGTTTTTACATTTCCAAAATCCTTAACAGGGGAGAATGTGATGCCGTTTGTCTTGTACCTCTGAATTATGATTGAGGGGGAGTTATTTTAGT
+
AAAAAFFFFFFFAFFFAFFFFFFFFFFFFFFFFFFF<FFFFFFAFFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF<FFFFFFFFFFFFAFFFFFAFFFFFFFFFFFFAF)<FFFAFFFFFFFFAFAFFFFFF.FF
@NS500322:33:H5CC5BGXX:1:11101:10001:13818
GGGGCCGCGGTACGGGTGGACCACTGGACATAGTCGCAGTCCTTCAGCTCGTTATAGCCAGCGGTGAGGTTTCCGTTTTCTACCAGCTTTTCGTTGTGGTTCTTGATGTTCTTG
+
AAAAAFFFFFFFFFFFFFFFFFFFFFFAFAFFFFFFFFFFFA<FF.FFFFFFAFFFFFF.FFFFFFFFFFFFFFFAFFFAF7FF.FFFFFFAFFFFFFF<A<FFFFFFFFAFFF
@NS500322:33:H5CC5BGXX:1:11101:10001:4885
CGTCGATGTGGGTCACGCCGTCGGGGCTGTCGGCGCTGGCCACGGCGATGTAGACCACGATGACCGTGTCGCCGTTGGCGGCCACGCCGTAGATGGAGCCGTCGGTGCAGATCTGCATGTTCTTCAGCTGGACGGGCATCACGTCGGCG
+
A7AAAFFFFFFFFF<FFFFFFFAFAFFFFFFF<F7FF<FFFFFFFFFFFFFFF.7.7FFFFF.FFFAFFFA)FFF<FFFFFFF)77<FFFFFAFAFFFFFFFFFFFF<)FA<FAF.F)F<<<F.F)FFFFFAFAAFF.F<.<.F.A.)<

Now that we have actual reads from mRNAs, we want to characterize them
taxonomically and functionally. Note that the goal is different from metagenomic
and 16S species quantification, because we're only characterizing the taxa for
the expressed reads -- it tells us which species are more "functionally active,"
though not necessarily abundant. For taxonomic classification, they use a
package called Kaiju, which works with user-specified reference databases. We
use the NCBI reference database, merging all the individual species genomes into
one big FASTA, which has lines like,

>gi|340785197|ref|NC_015856.1|:c5185474-5183813 Collimonas fungivorans Ter331 chromosome, complete genome
ATGGATATCAAACGTACCGTCCTGTGGGTTGTATTTTCGGTCTCGCTGCTGTTCCTCTGGGACCAGTGGC
AGCGCCATAACGGCCAGCCGTCGCTGTTCTTCCCTGGCACCGCCCAAACCGTACCTGCCGCTAGCGGCCC
GGCCAATGCAGTTGTCAGCACCAGTGCTGACGTGCCGCAAGCTTCGGCTGCTGCAGCGCCCGCCACCGGC
GCCGTGCCTGCCACTGCTGCCGACGCCAAGGGCGAAATCATCACCATCACTACCGATGTTGTCAAAGCCA
ATATCGATACTGTTGGCGGCGTGTTGAAGCGTCTAGAACTATTGACGCAGAAAGACACTGTCGACCCAAC
CAAGAACTTGGTACTGTTTGACAGCGGTGCCAACCGTACTTATCTCGCTGAAACCGGCCTGATCGGTGGT
GCTTTTCCTAACCACCATTCACCTTTCGTAGCTCTGCCTGGCGCTCGGACGCTGGACAACGGCAACCAGA
TACAACTGGTGCTGGAATCGACCGAAGGTGGTGTCAAGCTGACTAAGGTCTACACATTCAAGCGCGGCGA
CTATACGATAGATGTCAAACACATAGTGACTAACGATAGCGGCGCGGCGATCTCGCCCTCGCTCTACTTG
CGGTTGAAACGTGACGGCCATGCACCAGAAGGCGAGCAGCGGTTTGTGCACACTTTCACTGGCGCAGCCG
TTTACACCGACGCCAATAAGTTCCAGAAATTTGCATTCGACAAGATCGAGGATGGTAAGGCTGACCATGC
CACCAAAGCAGATAACGGCTGGTTTGCGATTATTCAGCATTACTTTGTCTCAGCATTCATTCCACAGGAT
AAAGCGCCGCGCGAAATCAAGACTGAAAAAATTGCCACCAATCTATATGCCGTCAGCAACATCCTGCCAT
TGGGTACCATTGCTCCCGGCGCCACCGTCACCATGGATGCCCGCCTGTATTCCGGCCCGGAAATCCAGAG
CGACCTGGAAGCGATCGCACCTGGCCTGGAACTGGTCAAGGACTATGGCTGGCTGACCATCATCGCCAAG
CCGATCTTCTGGCTGATGACGCAGATCCACAAAGTGCTCGGCAACTGGGGCTGGACCATCATCGCCCTGA
CCGTGCTGATCAAGCTGGCGTTCTTCCCGCTGTCGGCAGCGAGCTATCGCAGCATGGCCAAGATGAAGCT
GGTAACGCCGAAGATGACGTCGATCCGCGAGCGTTTCAAATCCGAACCGCAGAAGATGAACCAGGCCATG
ATGGAGCTGTACAAGACCGAGAAGATCAATCCGCTCGGCGGCTGCCTGCCGATCGTGGTGCAGATCCCGG
TGTTCATCTCGCTGTACTGGGTGTTGCTGGCCAGCGTGGAAATCCGCAATGCGCCATGGCTGGGCTGGAT
CCATGACCTGGCCGCACCGGATCCGTTCTACATCCTGCCGGTAGTGATGGCGATTTCGATGTTCATCCAG
ACCAAGCTGAACCCGACGCCGCCTGATCCGATGCAAGCCAAGGTGATGATGTTCATGCCGCTGATTTTCT
CGGTGATGTTCTTCTTCTTCCCGTCCGGCCTGGTGCTGTACTGGGTCACCAACAACGTGCTGTCGATTGC
GCAGCAATGGGTGATTACCCGCAAGATGGGTGCTGGTCCGGCCAAGGCTTAA
>gi|340785197|ref|NC_015856.1|:c5185778-5185494 Collimonas fungivorans Ter331 chromosome, complete genome
ATGAAAATGCCTCTACTGTTCCTGTTGCGCCTCTACAAACTGGGCATCAGCCCGTTTCTGGGACAGAATT
GCCGTTTTTATCCCAGCTGCTCCGATTACGCAGCCGAAGCTATCCGTACGCATGGCGCCCTGAAGGGCAG
CATGCTGGCCGGACGCCGCCTGTGCAAATGCCATCCCTGGCATGCGGGCGGACTCGATCCGGTGCCGCCG
CAGCAATCATCCACATCTCCATCTGCAACCAAACCCGCATCGGCCAGCCGATCGTGTGGTTGCGGCCATT
CCTGA

These are accompanied with taxonomic annotation files, like nodes.dmp, which
maps each taxonomic entity (first column) to its parent (second columns),
1       |       1       |       no rank |               |       8       |       0       |       1       |       0       |       0       |       0       |       0       |       0       |               |
2       |       131567  |       superkingdom    |               |       0       |       0       |       11      |       0       |       0       |       0       |       0       |       0       |               |
6       |       335928  |       genus   |               |       0       |       1       |       11      |       1       |       0       |       1       |       0       |       0       |               |
7       |       6       |       species |       AC      |       0       |       1       |       11      |       1       |       0       |       1       |       1       |       0       |               |
9       |       32199   |       species |       BA      |       0       |       1       |       11      |       1       |       0       |       1       |       1       |       0       |               |
10      |       1706371 |       genus   |               |       0       |       1       |       11      |       1       |       0       |       1       |       0       |       0       |               |

and names.dmp, which gives scientific names for each of the nodes,
1       |       all     |               |       synonym |
1       |       root    |               |       scientific name |
2       |       Bacteria        |       Bacteria <prokaryotes>  |       scientific name |
2       |       Monera  |       Monera <Bacteria>       |       in-part |
2       |       Procaryotae     |       Procaryotae <Bacteria>  |       in-part |
2       |       Prokaryota      |       Prokaryota <Bacteria>   |       in-part |
2       |       Prokaryotae     |       Prokaryotae <Bacteria>  |       in-part |
2       |       bacteria        |       bacteria <blast2>       |       blast name      |
2       |       eubacteria      |               |       genbank common name     |

The genomes and these names are linked via a kaijudb, though I'm not sure of the
mechanics. The database has lines like,

>WP_012957019.1_398511
MQFTIQRDRFVHDVQNVAKAVSSRTTIPILTGIKIVADHEGVTL
TGSDSDVSIETFIPKEDAENEIVTIEQEGSIVLQARFFAEIVKKLPGETIELIVQDQF
ATTIRSGSSVFNLNGLDPEEYPRLPQLEEDLLFRLPQDMLKNMIRQTVFAVSTQETRP
VLTGVNLETEEGELICTATDSHRLAMRKATIERNDEELTFSNVVIPGKSLNELSKIID
DSNELIDVVVTENQILFKFKNLLFFSRLLEGKYPVTKNMIPAQSKTSFTLKTKPFLQT
LERALLLSREGKNNVINLKTLDEGLIEITSIQPEVGKVTENIQSEQMQGEDMRISFNG
KNIIDALKVIDSEEINIVFTGAMSPFVIRPTDHDHYLHLFSPVRTY
>WP_012957020.1_398511
MEKLSISTEYITLGQVLKEVGAIDTGGMAKWYLSEYEVYVNGEL
ENRRGKKLFSGDRVKLADETSIEIVHE

which introduces some new WP IDs and also no longer codes for basepairs. At the
end though, we end up with classified taxonomically classified reads.

Next, we want to functionally annotate the reads. The idea here is to (1)
assemble the reads into long contigs, (2) see what genes are on those contigs,
by comparing to a reference database, and (3) map these reads to the contigs.

For the assembly step, we use an assembler called SPAdes. The output are just
FASTA files, where each line is a long contig inferred from all the individual
reads,

>NODE_1_length_1668_cov_7.793581_g0_i0
GGCATTGATGGGATTAAGTGCCACAAAAGGCACGGAAATTACAGTTAAGGTAGAGGGTCC
TGACGAAGATGAAGCTGTGAAAGCAGTGGAGGATTTTCTGAAGGCTAATCTATAGAATAA
AGTTTTGAAAATTGTTTCGATGCTAGGGCGAAACTAAAAACAAGGGGGTAAACTTTTTAT
GATGAAATATTTTCAAAAGCTAGGAAAGTCTTTGATGCTTCCCGTAGCATGTCTCCCGGT
CTGCGGTATCCTGATGGGAATCGGATACATTTTAGCACCGGCAGCTATGGCTGGTGAGGT
TGCAGGATTTACAGCCGGCGGTGTATCTTATACGATCGGTTTGTTCCTCATCAAAGCAGG
TGGAGCGTTAATTGACAACATGGCATGGTTATTTGCAATCGGTGTCGGCGTTGGTATGTC
AGAAGACGGCGACGGAACCGGCGGTCTTGCAGGTCTGGTATCATTCTTAATGATCACTAC
TCTGTTAAGCAGCGGTACGGTTTCCGCTTTAACCGGAGCAGACGCACATGCAGCATTTGG
CAAAATCAACAACCAGTTTATCGGTATTCTTTCCGGTATCATTGGTTCCACATGCTACAA
CAGATTTAAAAGTACGAAATTACCGGATGCATTGGCATTCTTCAGCGGTAAACGTGCCGT
AGCAATCGTAACGGCTGTTTTTTCTATCGTTGCATCTGGTGTTTTATTCTTCGTATGGCC
GCTTATTTTCGGCGCATTGGTTTCCTTGGGAGAGACATTCCTTGGAATGGGCGCAGTTGG
AGCTGGTATCTATGCATTCTTCAACCGTTTGCTGATTCCGTTCGGTCTGCACCATGCATT
AAACTCCGTATTCTGGTTCGACGTTGCTGGTATCAACGACCTTGGCAATTTCTGGGGCAA
TACGGGTGTATTCGGCGAGACTGGTATGTATATGACAGGATTCTTCCCGTTCATGATGTT
CGGTCTTCCGGCAGCCTGCCTGGCTATGTATCATACTGCTAAACCTGAGAAAAAGAAAAT
GGTTTACGGCTTGCTTGCATCTGCAGCATTCTGTTCCTTCTTTACAGGCGTTACGGAGCC
GATTGAATTCTCATTCATGTTCCTGGCTCCTGGCTTATACGTAGTTCATGCATTATTAGC
AGGTGTTACTGCAGGTATCACAGTTGCGCTTCCGATCAGAGCTGGTTTCTCATTCTCCGG
CGGTTCCATTGATATGGTTCTCAGTGCTTTCACACCGTTAGCACAGAATCCGTGGTTCCT
GATTCCGGTTGGAATCGTAGTTGGTATCATCTACTACATAGTATTCCGTTTCGTTATCAC
AACATTTAACTTAAAGAGCCCTGGCAGGGAAGATGACGATCTGGAAGCAGAGAAGAGAGT
TGTTCTTTCTAACGATAATTTCACAGAAGTTGCTAAGATCGTTTTAGAAGGTCTTGGCGG
AAAAGATAACGTGAAATCTCTTGACAACTGTATTACAAGACTTCGTCTTGAAATCAATGA
TTATACAAAGATCGATGAGAAAAAGATCAAATCTGCAGGTGTTGCAGGCGTTATGAGACC
GAGCAAGACATCTGTTCAGGTAATCGTTGGAACAAAAGTACAGTTCGTTGCGGACGAAAT
GAAAAAGATGTTAAAATAAGGTATTCTATATAAATACCGAAATCCCTA
>NODE_2_length_1589_cov_7.999338_g1_i0
AAATAAGTAAAATGTGGGATAATCTCATAGTATCATTTGGCCAAATGAAATTTCCTTGTT
TATGATTTCATCTATTGCAAAAAGGCATGGAGAGCGTATTACAGTCTCATCGTGCAGACG
AAAAAGCACAGAGAAATCTTTAAAAAACTCAGCAAATCGTTTTGGGAGGAAACAAGAATG
AAAAGAAAAGTAATGTCGCTTTTATTAGCAGGCACCATGGTTGCGACCATGTTTGCAGGC
TGCGGTGATAAGAAAGAAGAAGCACCGGCAACAGACAACAACAATGATACCGTAGAAGAT
ACCAGTGCACCGGCAGACGATGCAGCAAACGAAGAAGACAATGCTGCAGAAGAGCAGACA
CTGAAAGTAGCAGCTTTGGAAAGCGGATACGGCGCAGATATGTGGACAGAAGTAGCAGCA
GCATTTGAGGCTTCTCATCCGGGCGTTACCGTAGAACTTACAACCGACAAAAAATTAGAG
GACGTGATCAGCCCGAATATGCGTGCCGGAGAATATCCGGATGTTGTACATCTTGCAACA
GGACGTGAAGCAGGCCTGACAGAGACTTTGACAAAAGAAAAAGCATTGATGCCTTTGACA
GACGTATTGGATATGACCGTACCTGGCGAAGACGTAACCGTAAAAGATAAAGTGATTCCG
GGATTCCTTGATACACTTGGAACCAACCCATACGGCGATGGCGTTACCTACTACGCTCCG
ATGTTCTACAGCCCCTGCGGATTATTCTACAATGCAGGTCTTTTAAAAGAAAAAGGCTGG
GATCTTCCTACTACCTGGGATGAGATGTGGGAGTTAGGCGACAAAGCGAAGGCAGAAGGC
ATCGCATTATTCACATATCCGACAACCGGATACTTTGATGCATTTACATATGCTCTGTTA
GCTTCTTCAGGCGGATCTGATTTCTACAACAAGTGCATGACTTATGAAGACGGCATTTGG
GAAAGCCCGGAAGCTACGAAAGTATTTGAAATCGTTGGCAAATTGGCACAGTATACAGAA
GGCACGACAGTTGCAAACGCAAATGACGAAGGCTTTACAAAGAACCAGCAGTTAATCCTT
GACAACAAAGCAATCTTCTGCCCGAACGGTACATGGTTAGTTGGCGAGATGGCTGAGGCT
CCGAGAGCAGAAGGATTTGAGTGGGGCTTTACGGCAGTTCCGGCAGTAAACGACGGCGAG
AACGGAAGTTCTTTCACATTCTTTGAGCAGTTATGGGTACCTGCAGAAGCAGCAAATCCG
GATCTTGCAAAAGAATTCGTAGCTTATATGTATTCAGACGAAGCAGCACAGATTTTTGCT
AAATCTGCTGCAATTCAGCCGATCGCTGGCATCAGTGATTCTTTAGAAGGCGACAACAAA
ATGTTCTACAGCATCTATGACAACGGCGCAACCGCAGTTATGGGCGGATTTGCAGCTACA
GCTCCTGTAGAAGGCGTATCTATGGCAGATACATTGTTCGGAACCGTGAACAGTATTGTA
AGCGGAGACAAGACAGTTGAAGAATGGCAGGCAGCAGTAGAAGCAGCAAGCGATCAGTTA
AGAGACGCAATGGAATAAAGCATAACAGC

All the output below uses "NODE" to refer to a particular contig. The alignment
of reads to these contigs again takes the form of SAM files. E.g., in these two
lines of mouse1_contigs.fasta, the first read maps to the contig NODE_552, while
the second doesn't seem to align to anything.

NS500322:33:H5CC5BGXX:1:11105:9924:4846	0	NODE_552_length_274_cov_3.158974_g551_i0	9	25	5S142M	*	0	0	GGGATGTTCTCCGGGCGCAGGCGGCTATTGCGGACGGCGTTGCCGTCCAGTTCCCCTCCCGGCAGGCAAACCGCCGCGCCCACCGGTCAGGTAAGAGTCATGATGCATGGCACAGTCAACTCTTTCTGTACTCACGTTCACTGCTAA	AAA<AFFFFFFFFFFFFF<FFFFFFFFFFFFFFFFFFFFFFFFFFFF<FFFFAF<FFFFFFFFFFFF.<)AFFFFFFFA.F)<FFF.<FFFFFFFAFFF<FF.FFF.FFFF)F7FFA..FAFF7FFFFF<AAF.FFFF.FFFFA))7	NM:i:17	MD:Z:19T0C4T2G5C5C12A9G0G3T1A4T0G31G12C2G1G15	AS:i:57	XS:i:38
NS500322:33:H5CC5BGXX:1:11105:9927:1089	4	*	0	0	*	*	0	0	CAGGGAAGGTGGTATCCGGCACAATGGAGAAATCAGGCATGGGCTGCTCCTCCACAAACTTATCAATGTCCTGCATTCCGGTTTCTTCGCTGCACCCAAAAAAGAGGGTGATCTTGCTGCGCAGGGGG	AAAAAFFFFFFFFFAFFFFFFFFAFFFFFAFAFFFFFFFFFFFFFFFFFFAFFFFFA.FFFAFF.FFFF.FFFF)FF7.FFFF<FFFFFFFF77F7FAFFF7AFFFFFFF.FFFFFFFFFF.FFFFFF	AS:i:0	XS:i:0

We can rearrange this so that each contig gets exactly one line. Specifically,
mouse1_contigs_map.tsv has lines taht look like,

NODE_74_length_538_cov_5.017429_g73_i0  37      NS500322:33:H5CC5BGXX:1:11101:11430:2774        NS500322:33:H5CC5BGXX:1:11101:11795:16023       NS500322:33:H5CC5BGXX:1:11101:15697:19548       NS500322:33:H5CC5BGXX:1:11101:16680:8194        NS500322:33:H5CC5BGXX:1:11101:19309:4681        NS500322:33:H5CC5BGXX:1:11101:4538:19391        NS500322:33:H5CC5BGXX:1:11101:4781:18176        NS500322:33:H5CC5BGXX:1:11101:6734:13530        NS500322:33:H5CC5BGXX:1:11102:13529:1096        NS500322:33:H5CC5BGXX:1:11102:14840:5684        NS500322:33:H5CC5BGXX:1:11102:18116:8136        NS500322:33:H5CC5BGXX:1:11102:3423:18058        NS500322:33:H5CC5BGXX:1:11102:7476:12993        NS500322:33:H5CC5BGXX:1:11103:10478:15589       NS500322:33:H5CC5BGXX:1:11103:10962:5258        NS500322:33:H5CC5BGXX:1:11103:12480:5501        NS500322:33:H5CC5BGXX:1:11103:15789:18122       NS500322:33:H5CC5BGXX:1:11103:16545:8196        NS500322:33:H5CC5BGXX:1:11103:20960:18783       NS500322:33:H5CC5BGXX:1:11103:23447:9925        NS500322:33:H5CC5BGXX:1:11103:24728:15671       NS500322:33:H5CC5BGXX:1:11103:4634:16224        NS500322:33:H5CC5BGXX:1:11103:5421:3427 NS500322:33:H5CC5BGXX:1:11103:7014:5018 NS500322:33:H5CC5BGXX:1:11103:7277:18781        NS500322:33:H5CC5BGXX:1:11103:8075:2171 NS500322:33:H5CC5BGXX:1:11104:12208:6491        NS500322:33:H5CC5BGXX:1:11104:13631:10803       NS500322:33:H5CC5BGXX:1:11104:15335:18433       NS500322:33:H5CC5BGXX:1:11104:16815:4555        NS500322:33:H5CC5BGXX:1:11104:17880:9649        NS500322:33:H5CC5BGXX:1:11104:23508:9722        NS500322:33:H5CC5BGXX:1:11104:24929:4457        NS500322:33:H5CC5BGXX:1:11104:7539:7613 NS500322:33:H5CC5BGXX:1:11104:9731:6994 NS500322:33:H5CC5BGXX:1:11105:22233:4073        NS500322:33:H5CC5BGXX:1:11105:6990:1853
NODE_358_length_307_cov_1.960526_g357_i0        11      NS500322:33:H5CC5BGXX:1:11101:15922:6384        NS500322:33:H5CC5BGXX:1:11101:20379:3765        NS500322:33:H5CC5BGXX:1:11101:22252:17075       NS500322:33:H5CC5BGXX:1:11101:3319:12216        NS500322:33:H5CC5BGXX:1:11102:16103:11622       NS500322:33:H5CC5BGXX:1:11103:2706:17238        NS500322:33:H5CC5BGXX:1:11103:4061:6258 NS500322:33:H5CC5BGXX:1:11104:11635:6240        NS500322:33:H5CC5BGXX:1:11104:19561:20243       NS500322:33:H5CC5BGXX:1:11104:6412:15981        NS500322:33:H5CC5BGXX:1:11104:7587:17721

where the first column is a contig, the second is the length of the contig, and
the rest are IDs of reads that map to that contig. Note that it is also useful
to keep track of reads that were never incorporated into any contig, this is the
content of mouse1_unassembled.fasta. It's just a list of reads,

@NS500322:33:H5CC5BGXX:1:11102:18001:18268
GTCGGATCTAATGAATAGTCTGCATTATTCTTTCCATCCCATGCATATACAGCGTGTTGTTTAGCCTCATCTGCCGTTGCAAATTCAGGAACGAAATCATAAGTTTTACGGAATTCGTCTTTACTCAACTGTACATCTTTATGGTTGAATATCTTATCC
+
A<AAAFFFFAFFFAF<FFFFFFFFFFFFFFFFF7FFFFFF.FFFFFFFFFFF7FFFFFFFF.FFFFFF<FFFFFFFFFA7FFFFF<AFFFAFF<FFFA<FFFFF)FFFFFFFFFFAFFF<AFA.FF7FFFFFFFF<7AF7AFFFFAFFFAFFFFAFFA7
@NS500322:33:H5CC5BGXX:1:11102:12577:12215
GCGCTTTTTCAATTGTCCCCTGGCAGTCAGCCGCATCAAAATCCGGGCTGACCTGGTTGGCAAGGAAGGAATCCACAAATTTGCCCAGAAGCCTGGTATAAAGCTTTTTATTGCCATTTAAACGTTTTAAGCCATCGTCAATATCTACACCTAATGTCCT
+
AAAAAFFFFFFFFFFFFFFFFFFFFFFFFFFFFF.FFFFFAFFFFFFFFFAFFFFFFFFFFAFFFFFFFAFFFF<F<FFFFFFFFFFFF.FFFFFFFAFA.FFF<FFFFFFFFF<FFFFAAFFFFFFFFFFFFFFFFFF.FFAFFFFF<AA<<<FFFFAA

Now that we have these contigs, we can try to see what genes are on them. This
is done by aligning (using BWA) the contigs to the same NCBI-based
microbial_all_cds.fasta file from before. We can also align the unassembled
reads to these references, to see if there are any genes on these smaller reads
that we can still salvage. This results in mouse1_contigs_annotation_bwa.sam and
mouse1_unassembled_annotation_bwa.sam, respectively. For example, the first
contig below aligns with a gene for "elongation factor Tu" in a particular
Clostridium species (https://www.ncbi.nlm.nih.gov/nuccore/NC_014376.1)

NODE_756_length_231_cov_5.500000_g755_i0	16	gi|302384444|ref|NC_014376.1|:c4082527-4081334	374	2	58M173S	*	0	0	GTCAGGTAGGCGTTCCTTATATCGTAGTATTCATGAACAAGTGCGATATGGTTGACGACGCTGAGCTTCTGGAATTAGTAGAAATGGAAATCACAGAGCAGTTAGAAGAATACGGATTCAATGACTGTCCGATCATCCAGGGTTCTGCATTAAAAGCTCTCGAAGATCCGAACGGAGAGTGGGCAGATAAAGTTATGGAATTAATGGCAACCGTTGACGACTATATTCCGG	*	NM:i:2	MD:Z:19C5T32	AS:i:48	XS:i:45	XA:Z:gi|568262354|ref|NC_023134.1|:c3768865-3767675,-371,55M176S,2;gi|479181986|ref|NC_021024.1|:c882267-881074,-374,58M173S,3;gi|479336697|ref|NC_021047.1|:1200366-1201559,-374,58M173S,3;gi|479192860|ref|NC_021035.1|:1368951-1370144,-374,58M173S,3;
NODE_757_length_229_cov_5.140000_g756_i0	4	*	0	0	*	*	0	0	GGAAAACAAAATCTTCCATTAAAAATTTAATAAGCATCAAAGGTTTCAGACAGAGTGGATGTGCAGTACACGAAAAAGTAACGGATTGCTGAAGCGGAATTTGCCAGAGCGTTACAGTGCATTGAGTACAGGAGAAGCGTGGAAAGCACAATGGGTGAAATGGAAGAAAAGAGAACTGAAAAACTGAATAAGGAGGTATGGTCCATTGGATGAGGAGTTCTGAGAGGGC	*	AS:i:0	XS:i:0

As before, we can arrange the these mappings into a TSV which has one gene per
row. The first gene has length 2343 and is mapped to by 10 contigs, the second
has length 1023 and is mappted to by 19 contigs.

gi|269791619|ref|NC_013522.1|:707761-710103     2343    10      NS500322:33:H5CC5BGXX:1:11101:14990:1180        NS500322:33:H5CC5BGXX:1:11101:1898:19903        NS500322:33:H5CC5BGXX:1:11101:3194:8141 NS500322:33:H5CC5BGXX:1:11102:16400:19331       NS500322:33:H5CC5BGXX:1:11102:18310:19979       NS500322:33:H5CC5BGXX:1:11103:4557:12397        NS500322:33:H5CC5BGXX:1:11104:12911:20037       NS500322:33:H5CC5BGXX:1:11104:18344:17759       NS500322:33:H5CC5BGXX:1:11104:19704:7121        NS500322:33:H5CC5BGXX:1:11104:8170:13958
gi|317131008|ref|NC_014828.1|:2789167-2790189   1023    19      NS500322:33:H5CC5BGXX:1:11101:10637:1714        NS500322:33:H5CC5BGXX:1:11101:16538:15523       NS500322:33:H5CC5BGXX:1:11101:20361:19050       NS500322:33:H5CC5BGXX:1:11101:3556:4830 NS500322:33:H5CC5BGXX:1:11101:5516:6902 NS500322:33:H5CC5BGXX:1:11101:9222:9260 NS500322:33:H5CC5BGXX:1:11102:10773:5544        NS500322:33:H5CC5BGXX:1:11102:14840:9382        NS500322:33:H5CC5BGXX:1:11102:1939:17058        NS500322:33:H5CC5BGXX:1:11102:2119:10986        NS500322:33:H5CC5BGXX:1:11102:7598:5356 NS500322:33:H5CC5BGXX:1:11103:10595:2102        NS500322:33:H5CC5BGXX:1:11103:12351:9040        NS500322:33:H5CC5BGXX:1:11104:12217:17551       NS500322:33:H5CC5BGXX:1:11104:14963:10194       NS500322:33:H5CC5BGXX:1:11104:18573:2028        NS500322:33:H5CC5BGXX:1:11104:2036:2360 NS500322:33:H5CC5BGXX:1:11104:5247:14589        NS500322:33:H5CC5BGXX:1:11105:9439:1151

At this point, we basically have the data we'd need to create a useful
functional annotation vector, where each element gives some normalized value of
the expression level of each gene, either in terms of known contig converage or
more directly via reads (the workflow includes a script for calculating RPKM,
though I'm not sure if this is what we'll want to use).

The genes that we've identified in our sample can also be collected into a
single fasta, mouse1_genes.fasta, which has the form

>gi|479158859|ref|NC_021016.1|:c337718-337026 Butyrate-producing bacterium SSC/2, complete genome
ATGATTTATTCACATGAAGTAGAACAAATGTGTACAGTAGCTCAGGGTGTAAACCATGGA
GCTGCCCCAATTCCTGAAGAAGCAAAATGGGTAAAAGCGAAAGATGTAACAGACATCTCA
GGATTAACACATGGTATTGGTTGGTGTGCACCTCAGCAGGGAGGATGTAAATTAACTCTT
AACGTTAAAGAAGGTATCATCCAGGAAGCATTAGTAGAAACAATCGGATGTTCAGGAATG
ACACATTCAGCTGCTATGGCATCTGAAATCTTACCAGGAAGAACAATTTTAGAAGCATTG
AATACAGACTTAGTTTGTGATGCTATCAATACAGCAATGAGAGAATTATTCTTACAGATC
GTATACGGAAGAACTCAGAGTGCATTCTCTGAAGAAGGACTTCCAATCGGTGCTGGTCTT
GAAGACTTAGGTAAAGGATTAAGATCTCAGGTTGGTACAATGTACGGAACACTTAAAAAA
GGTCCTCGTTACCTTGAAATGGCTGAAGGATACGTTACAGGTATCGCTCTTGATGCGGAT
GATGAAATCATTGGATACCAGTTTGTTAACTTTGGTAGAATGATGGACTTCATCAAAGCT
GGAGACGATGCTCAGACAGCACTTGACAAGGCCAAAGGTCAGTACGGACGCGTTGATGAC
GCTGTTAAGATTATTGACCCAAGAAAGGAATAG
>gi|365823354|ref|NC_014624.2|:c3890374-3889181 Eubacterium limosum KIST612 chromosome, complete genome
ATGGCTAAGGAAAAATTTGAAAGATCCAAACCACATGTTAACATTGGTACCATCGGTCAT
GTTGACCACGGTAAAACAACATTAACCGCTGCAATCACCACCGTATTAAACAAACGCTTC
GGAACCGGTGAAGCTGTAGCTTTCGACAACATCGATAAAGCACCAGAAGAAAGAGAACGT
GGCATCACCATCTCAACCGCCCACGTTGAATATGAAACCGACGCCCGCCACTACGCACAC
GTCGACTGCCCGGGCCATGCCGACTATGTTAAAAACATGATCACCGGCGCAGCCCAGATG
GACGGCGCGATCTTAGTTGTATCCGCAGCCGACGGCCCAATGCCGCAGACCCGTGAACAC
ATCCTGTTAAGCCGTCAGGTAGGCGTACCATACATCATCGTCTTCTTAAACAAAGCCGAC

We can use the same approach to perform other sorts of annotation on these
contigs. For example, we can align to the NR protein database instead of the
NCBI gene reference. Since we're aligning contigs to proteins, we'll use blastx,
as implemented in DIAMOND (a faster, but approximate, version of BLAST). Just
for context, a few lines of NR look like

>PPA34012.1 polyribonucleotide nucleotidyltransferase [Streptococcus salivarius]
MAKQTFEMTFAGRPLVVEVGQVAKQANGAVVVRYGDTTVLSTAVMSKKMATADFFPLQVNYEEKMYAAGKFPGGFNKREG
RPSTDATLTARLIDRPIRPMFAEGFRNEVQVINTVLSYDENASAPMAAMFGSSLALSISDIPFNGPIAGVQVAYAAEDFI
INPSAADKEVSLLDLTVAGTKEAINMVESGAQELSEDIMLQALLKGHEAIQELVDFQNYIVAAVGKEKAEVELLQVDADL
KVEIETAYYDQLAKAVQVEEKLAREAATQAVKEEVLASYQERFAEDEDKETILRDVAEILEQMEHAEVRRLITEDKVRPD
GRRVDEIRPLDAEIDFLPKVHGSGLFTRGQTQALSVLTLAPMSDTQLVDGLDPEYKKRFLHHYNFPQYSVGETGRYGAPG
RREIGHGALGERALAQVLPSVEEFPYAIRLVAEVLESNGSSSQASICAGTLALMAGGVPIKAPVAGIAMGLISDGNNYTV
LTDIQGLEDHFGDMDFKVAGTRQGITALQMDIKISGITPAILEEALAQAKVARFEILDVIESAIAEPRPELAPTAPKIDS
IQIPVDKIKVVIGKGGETIDKIIAETGVTIDIDEEGLVQIFSSNQDAINRAKAIISDLVREAKVGEVYTVPVVRIEKFGA
FVHLFNKTDALIHISELAWERTEHVEDVVKVGGTVTVKIIKIDEKGRIDASIKALLPKPEKLEDGENGGEQRHRRRSHHK
PRHHNKSGEAPKNPDKSETKEQTEE
>PPA33939.1 molecular chaperone DnaK [Streptococcus salivarius]
MSKIIGIDLGTTNSAVAVLEGTESKIIANPEGNRTTPSVVSFKNGEIIVGDAAKRQAVTNPDTIISIKSKMGTSEKVSAN
DKEYTPQEISAMILQYLKGYAEDYLGEKVTKAVITVPAYFNDAQRQATKDAGKIAGLEVERIVNEPTAAALAYGLDKTDK
EEKILVFDLGGGTFDVSILELGDGVFDVLATAGDNKLGGDDFDQKIIDYMVEEFKKENGIDLSTDKMALQRLKDAAEKAK
KDLSGVTSTQISLPFITAGEAGPLHLEMTLTRAKFDDLTRDLVERTKTPVRQALSDAGLSLSDIDEVILVGGSTRIPAVV
EAVKAETGKEPNKSVNPDEVVAMGAAIQGGVITGDVKDVVLLDVTPLSLGIETMGGVFTKLIDRNTTIPTSKSQVFSTAA
DNQPAVDIHVLQGERPMAADNKTLGRFQLTDIPAAPRGIPQIEVTFDIDKNGIVSVKAKDLGTQKEQTIVIQSNSGLTDE
EIEKMMKDAEANAEADAKRKEEVDLRNEVDQAIFATEKTIKETEGKGFDTERDAAQSALDDLKKAQESGNLDDMKAKLEA
LNEKAQALAVKLYEQAAAAQQAQAGAEGAQTADNSGDDVVDGEFTEK

and the raw output from DIAMOND looks like

